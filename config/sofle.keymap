#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        next_buffer: next_buffer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET &kp B>;
            label = "NEXT_BUFFER";
            wait-ms = <5>;
        };

        prev_buffer: prev_buffer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp B>;
            label = "PREV_BUFFER";
            wait-ms = <5>;
        };

        telescope_files: telescope_files {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp BACKSLASH &kp T &kp P>;
            label = "TELESCOPE_FILES";
            wait-ms = <5>;
        };

        close_buffer: close_buffer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp BACKSLASH &kp B &kp C &kp C>;
            label = "CLOSE_BUFFER";
            wait-ms = <5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE   &kp N1    &kp N2    &kp N3     &kp N4  &kp N5       &kp UP_ARROW     &kp N6   &kp N7  &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB     &kp Q     &kp W     &kp E      &kp R   &kp T        &kp DOWN_ARROW   &kp Y    &kp U   &kp I      &kp O    &kp P     &kp BSLH
&kp ESC     &kp A     &kp S     &kp D      &kp F   &kp G        &kp LEFT_ARROW   &kp H    &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT   &kp Z     &kp X     &kp C      &kp V   &kp B        &kp RIGHT_ARROW  &kp N    &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
&kp C_MUTE  &kp LGUI  &kp LALT  &kp LCTRL  &mo 1   &kp SPACE    &kp ENTER        &kp RET  &mo 2   &kp RALT   &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp F1      &kp F2           &kp F3          &kp F4           &kp F5           &kp F6             &mmv MOVE_UP     &kp F7           &kp F8           &kp F9      &kp F10    &kp F11           &kp F12
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans      &trans           &trans          &trans           &trans           &trans             &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI    &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &trans     &trans            &trans
&kp C_MUTE  &trans           &trans          &trans           &trans           &trans             &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6  &kp F7      &kp F8            &kp F9      &kp F10    &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &trans  &trans      &kp F11           &kp F12     &kp UNDER  &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &trans  &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_NEXT  &kp LBRC   &kp RBRC
&trans     &trans        &trans          &trans        &trans        &trans          &mmv MOVE_RIGHT  &trans  &trans      &trans            &trans      &trans     &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans  &trans      &trans            &trans      &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        both {
            bindings = <
&trans  &trans         &trans  &trans  &trans            &trans    &trans  &trans        &trans  &trans  &trans        &trans  &trans
&trans  &close_buffer  &trans  &trans  &trans            &trans    &trans  &trans        &trans  &trans  &trans        &trans  &trans
&trans  &trans         &trans  &trans  &telescope_files  &trans    &trans  &prev_buffer  &trans  &trans  &next_buffer  &trans  &trans
&trans  &trans         &trans  &trans  &trans            &trans    &trans  &trans        &trans  &trans  &trans        &trans  &trans
&trans  &trans         &trans  &trans  &trans            &trans    &trans  &trans        &trans  &trans  &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        both_active {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
